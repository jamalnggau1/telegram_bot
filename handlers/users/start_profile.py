import requests as requests
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.builtin import CommandStart
from aiogram.dispatcher.filters.builtin import Command
from constants import host, api_constant, machine_token_constant
from data import config
from enum_constans import meeting_status_constant, waiting_status_constant, not_ready_status_constant, write_your_email, \
    blank_profile
from keyboards.inline.callback_data import edite_profile_callback
from keyboards.inline.inline_buttons import one_button, change_profile_or_status_button
from loader import dp
from request_to_server.requests import login
from states import Registration_states
from enum_constans import change_profile, change_meeting_status


@dp.message_handler(CommandStart() | Command("profile"))
async def bot_start(message: types.Message, state: FSMContext):
    # –ø–æ–¥–±–∏—Ä–∞–µ–º user_id
    user_id = message.from_user.id

    # –æ–ø—Ä–µ–¥–µ–ª—è–µ–º username –±–æ—Ç–∞
    url = "https://api.telegram.org/bot" + f"{config.BOT_TOKEN}" + "/getMe"
    payload = {}
    headers = {}
    bot_username = "@" + requests.request("POST", url, headers=headers, data=payload).json().get("result").get(
        "username")

    # –ï—Å–ª–∏ login –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å –Ω–µ 200(–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ), –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∑–∞—Ä–µ–≥–∞—Ç—å—Å—è.
    # status = 200 - –í—Å–µ —Ö–æ—Ä–æ—à–æ profile –µ—Å—Ç—å
    request_from_login = login(user_id, machine_token_constant)
    # –ï—Å–ª–∏ login –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å –Ω–µ 200(–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ), –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∑–∞—Ä–µ–≥–∞—Ç—å—Å—è.
    # status = 200 - –í—Å–µ —Ö–æ—Ä–æ—à–æ profile –µ—Å—Ç—å
    if request_from_login.status_code == 200:

        # —Å—Å—ã–ª–∫–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è.
        url = host + '/filling_profile/'
        if len(request_from_login.json().get("skills")) >0:
            text = 'ü™û–ö–∞—Ä—Ç–æ—á–∫–∞ –ø—Ä–æ—Ñ–∏–ª—èü™û\n'
            text += f'''\n–°—Ç–∞—Ç—É—Å: '''
            # meeting_status –∏–∑ json –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫–∞–∫ str
            meeting_status = int(request_from_login.json().get("meeting_status"))
            if meeting_status == waiting_status_constant:
                text += f'''–≤ –ø–æ–∏—Å–∫–∞—Ö —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞'''
            elif meeting_status == not_ready_status_constant:
                text += f'''–Ω–µ –∏—â—É —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞'''
            elif meeting_status == meeting_status_constant:
                if request_from_login.json().get("companion") is not None:
                    # text += f'''–æ–±—â–∞—é—Å—å —Å @{request_from_login.json().get("companion")}'''
                    text += '–ø–æ–ª—É—á–∏–ª '+f"""<a href="tg://user?id={request_from_login.json().get("companion")}">—Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞‚òï</a>"""

                else:
                    text += f'''–≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–∏—Å–∫–∞ –≤—Å—Ç—Ä–µ—á. –¢–≤–æ–π —Å—Ç–∞—Ç—É—Å: "–ø–æ–ª—É—á–∏–ª ...", –Ω–æ –ø–∞—Ä—Ç–Ω–µ—Ä –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç. –û–±—Ä–∞—Ç–∏—Å—å —Å —ç—Ç–æ–π –æ—à–∏–±–∫–æ–π –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É —á–µ—Ä–µ–∑ /help'''
            else:
                text += f'''–≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–∞–º–∏ –ø–æ–∏—Å–∫–∞ –≤—Å—Ä–µ—á. –û–±—Ä–∞—Ç–∏—Å—å —Å —ç—Ç–æ–π –æ—à–∏–±–∫–æ–π –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É —á–µ—Ä–µ–∑ /help'''

            text += f'''\n–ò–Ω—Ç–µ—Ä–µ—Å—ã: {request_from_login.json().get("skills")}'''
            text += f'''\n–ú–æ—è –ø–æ—á—Ç–∞: {request_from_login.json().get("email")}'''

            print(f'''***********skills:{request_from_login.json().get("skills")}''')
            text += "\n–ß—Ç–æ-–Ω–∏–±—É–¥—å –∏–∑–º–µ–Ω–∏–ª–æ—Å—å?"

            # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "meetting", —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ç–æ–ª—å–∫–æ —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "–∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å".
            if meeting_status == meeting_status_constant:

                await message.answer(text, reply_markup=one_button(text_btn=change_profile,
                                                                   callback_data=edite_profile_callback.new(
                                                                       status="edite_profile"),
                                                                   url=requests.post(url, params={
                                                                       'token': request_from_login.json().get("token"),
                                                                       'contacts': user_id}).url))
            else:
                await message.answer(text, reply_markup=change_profile_or_status_button(change_profile,
                                                                                        requests.post(url, params={
                                                                                            'token': request_from_login.json().get(
                                                                                                "token"),
                                                                                            'contacts': user_id}).url,
                                                                                        change_meeting_status))

        # –≤ profile –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã skills
        else:
            await message.answer(blank_profile, reply_markup=one_button(text_btn=change_profile,
                                                               callback_data=edite_profile_callback.new(
                                                                   status="edite_profile"),
                                                               url=requests.post(url, params={
                                                                   'token': request_from_login.json().get("token"),
                                                                   'contacts': user_id}).url))

    # profile –Ω–µ –Ω–∞–π–¥–µ–Ω
    else:
        await message.answer(f"""–ü—Ä–∏–≤–µ—Ç üëã. –ù–∞ —Å–≤—è–∑–∏ {bot_username}, –ø–æ–∑–≤–æ–ª—å –º–Ω–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ.

üìÜ–ö–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é —è  –±—É–¥—É –∏—Å–∫–∞—Ç—å —Ç–µ–±–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞, —á—Ç–æ–±—ã –≤–º–µ—Å—Ç–µ –¥–µ–ª–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –≤–µ—â–∏: –∏–∑—É—á–∞—Ç—å —è–∑—ã–∫, –æ–±—Å—É–∂–¥–∞—Ç—å –∫–µ–π—Å—ã, –Ω–∞–π—Ç–∏ —á—Ç–æ-—Ç–æ —Å–≤–æ–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑–≤–ª–µ—á—å—Å—è –≤–µ—á–µ—Ä–æ–º.

–¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –ø–æ–∏—Å–∫—É —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞üßô‚Äç‚ôÇ""")

        await message.answer(write_your_email)

        await Registration_states.enter_email.set()
