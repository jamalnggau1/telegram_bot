import json

import requests as requests
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types.callback_query import CallbackQuery

import constants
from constants import host, machine_token_constant
from data import config
from keyboards.inline.callback_data import checking_meeting, meeting_feedback, change_meeting_status_callback
from keyboards.inline.inline_buttons import leave_feedback_buttons, two_buttons
from loader import dp
from request_to_server.requests import getfeedbackfromuser, stop_meet_change_partner


@dp.callback_query_handler(checking_meeting.filter(status="ok_good!"))
async def checking_meeting_ok_good(callback: CallbackQuery):
    await callback.answer(cache_time=10)

    user_telegram=callback.from_user.id
    response = getfeedbackfromuser(user_telegram)

    if response.status_code == 200:
        if response.json() == 'false':
            await callback.message.answer('–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ‚ú® –ö–∞–∫ –±—ã —Ç—ã –æ—Ü–µ–Ω–∏–ª –≤—Å—Ç—Ä–µ—á—É?', reply_markup=leave_feedback_buttons(meeting_feedback))

        elif response.json() == 'true':
            await callback.message.answer('–¢–≤–æ–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ —É–∂–µ –æ—Ü–µ–Ω–∏–ª –≤—Å—Ç—Ä–µ—á—É. –ê —á—Ç–æ –¥—É–º–∞–µ—à—å —Ç—ã?', reply_markup=leave_feedback_buttons(meeting_feedback))




@dp.callback_query_handler(checking_meeting.filter(status="not_answer"))
async def checking_meeting_not_answer(callback: CallbackQuery):
    await callback.answer(cache_time=10)

    text = """–•–æ—á–µ—à—å –ª–∏ —Ç—ã –ø–æ–º–µ–Ω—è—Ç—å –µ–≥–æ?
–ò–ª–∏ –ø–æ–∫–∞ –ø–æ–¥–æ–∂–¥–∞—Ç—å –æ—Ç–≤–µ—Ç–∞?üßô‚Äç‚ôÇÔ∏è"""

    a = InlineKeyboardMarkup(
        row_width=2,
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text='–Ø –ø–æ–¥–æ–∂–¥—É',
                    callback_data=checking_meeting.new(status="I_wait"),

                ),
                InlineKeyboardButton(
                    text='–•–æ—á—É –ø–æ–º–µ–Ω—è—Ç—å',
                    callback_data=checking_meeting.new(status="want_change_partner")

                ),

            ]
        ]
    )
    await callback.message.answer(text, reply_markup=a)


@dp.callback_query_handler(checking_meeting.filter(status="I_wait"))
async def checking_meeting_I_wait(callback: CallbackQuery):
    await callback.answer(cache_time=10)

    text = """–•–æ—Ä–æ—à–æ, –º—ã –¥–∞–ª–∏ –∑–Ω–∞—Ç—å –µ–º—É –æ–± —ç—Ç–æ–ºüì©
    """
    await callback.message.answer(text)


@dp.callback_query_handler(checking_meeting.filter(status="want_change_partner"))
async def checking_meeting_status_change_partner(callback: CallbackQuery):
    await callback.answer(cache_time=10)

    text = """"–¢—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –≤–∑—è—Ç—å –±–æ–ª—å—à–µ, —á–µ–º –Ω–∏—á–µ–≥–æ".
–ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Ç–µ–±–µ –Ω–æ–≤–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞üïµÔ∏è"""

    await callback.message.answer(text)

    profile_telegram = callback.from_user.id
    response = stop_meet_change_partner(profile_telegram, machine_token_constant)